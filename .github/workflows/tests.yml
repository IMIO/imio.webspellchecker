# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on: [push]

jobs:
    build:
      strategy:
            fail-fast: false
            matrix:
                include:
                  - python-version: "2.7.18"
                    plone-version: "4.3"
                  - python-version: "3.8.15"
                    plone-version: "5.2"
                  - python-version: "3.11.2"
                    plone-version: "6.0"

      runs-on: "ubuntu-latest"
      steps:
            - uses: actions/checkout@v3
            - uses: actions/cache@v3
              with:
                  path: |
                    ~/.cache/pip
                    ~/buildout-cache/eggs
                    ~/extends
                  key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ matrix.plone-version }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/*.cfg') }}-${{ hashFiles('**/constraints.txt') }}-${{ hashFiles('**/tox.ini') }}
                  #restore-keys: |
                  #  ${{ runner.os }}-tox-
            - name: Install python version ${{ matrix.python-version }}
              uses: gabrielfalcao/pyenv-action@v17
              with:
                default: "${{ matrix.python-version }}"
                command: pip install -U pip  # upgrade pip after installing python

            - name: debug
              run: |
                  python --version
                  pip --version

            - name: setup buildout cache
              run: |
                  mkdir -p ~/buildout-cache/{eggs,downloads}
                  mkdir ~/.buildout
                  echo "[buildout]" > $HOME/.buildout/default.cfg
                  echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
                  echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install tox tox-gh-actions
            - name: Install Firefox
              uses: browser-actions/setup-firefox@latest
              with:
                firefox-version: '102.2.0esr'
            - name: Xvfb
              run: Xvfb :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
            - name: Test with tox
              run: |
                  tox -r
              env:
                DISPLAY: :99
                PLONE-VERSION: ${{ matrix.plone-version }}
                PYTHON-VERSION: ${{ matrix.python-version }}
            - uses: actions/upload-artifact@v3
              if: failure()
              with:
                name: ${{ matrix.python-version }}-${{ matrix.plone-version }}
                path: .tox/py*/parts/test
            - name: "Coverage report"
              run: tox -r -e coverage-report
            - name: "Upload coverage to Codecov"
              uses: "codecov/codecov-action@v3"
              with:
                fail_ci_if_error: false
