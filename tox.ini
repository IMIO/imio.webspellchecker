[tox]
envlist =
    {py27,py310}-lint,
    py{27}-Plone{43},
    py{38}-Plone{52},
    py{311}-Plone{60},
    py{312}-Plone{60},
    build_instance,
#    docs,
#    coverage-report,

skip_missing_interpreters = True

[gh-actions:env]
PLONE-VERSION =
    4.3: Plone43
    5.2: Plone52
    6.0: Plone60

PYTHON-VERSION =
    2.7.18: py27
    3.8.15: py38
    3.11.2: py311

[testenv]
skip_install = true

extras =
    develop
    test

commands =
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} bootstrap
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} annotate
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} install test robot
    coverage run {envbindir}/test -v1 --auto-color {posargs}
    # coverage run {envbindir}/test -v --all -t robot {posargs}
    # {envbindir}/code-analysis

setenv =
    COVERAGE_FILE=.coverage.{envname}
    version_file=test-6.0.cfg
    Plone43: version_file=test-4.3.cfg
    Plone52: version_file=test-5.2.cfg
    Plone60: version_file=test-6.0.cfg

deps =
    Plone43: -rrequirements-4.3.txt
    Plone52: -rrequirements-5.2.txt
    Plone60: -rrequirements-6.0.txt
    coverage

[testenv:coverage-report]
skip_install = true
usedevelop = True
basepython = python3.10

deps =
    coverage
    -crequirements-6.0.txt

setenv =
    COVERAGE_FILE=.coverage

commands =
    coverage erase
    coverage combine
    coverage html
    coverage xml
    coverage report

[lint]
skip_install = true

deps =
    isort
    flake8
    # helper to generate HTML reports:
    flake8-html
    # Useful flake8 plugins that are Python and Plone specific:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-print
    #flake8-pytest
    flake8-todo
    flake8-isort
    mccabe
    # Potential flake8 plugins that should be used:  # TBD
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes
    #flake8-polyfill

commands =
    mkdir -p {toxinidir}/reports/flake8
    - flake8 --format=html --htmldir={toxinidir}/reports/flake8 --doctests src setup.py
    flake8 --doctests src tests setup.py
    isort --check-only --recursive {toxinidir}/src

whitelist_externals =
    mkdir



[testenv:black-check]
basepython = python3.10
skip_install = True
deps =
    -crequirements-6.0.txt
    # BBB: black 21.12b0 it is the last version with python2 support.
    black[python2]==21.12b0
    # BBB: click > 8.0.4 causes error on black < 22.3.0.
    click==8.0.4

commands =
    black --check -l 120 --diff -v src setup.py

[testenv:isort-apply]
skip_install = true

deps =
    isort

commands =
    isort --apply --recursive {toxinidir}/src

[testenv:py27-lint]
basepython = python2.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:py310-lint]
basepython = python3.10
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:update_translation]
skip_install = true

deps =
    i18ndude

commands =
    i18ndude find-untranslated
    i18ndude rebuild-pot
    i18ndude merge
    i18ndude sync
    i18ndude list

[testenv:release]
skip_install = true

deps =
    zest.releaser[recommended]

commands =
    fullrelease --no-input -v

[testenv:build_instance]
basepython = python2.7
skip_install = true

commands =
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={toxinidir} bootstrap
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={toxinidir} annotate
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={toxinidir}
